{"version":3,"sources":["assets/noonoo2.svg","components/Widgets/Widget-heading/Widget_heading.js","components/Widgets/Widget-text/Widget_text.js","components/Widgets/Header/Logo.js","components/Widgets/Navbar/Navbar-test/Navbar.js","components/Widgets/Header/Header.js","components/Views/View.js","CallApi.js","App.js","serviceWorker.js","Store/Reducer/DataReducer.js","Store/Reducer/ConfigReducer.js","Store/Reducer/PagesReducer.js","Store/Reducer/ViewReducer.js","Store/store.js","index.js","assets/Leoo.png"],"names":["module","exports","Widget_heading","widget","props","state","dataWidgetTitle","title","dataWidgetWidgetStyle","widget_style","dataWidgetSubtitle","subtitle","dataWidgetClass","class","dataWidgetIntro","intro","dataWidgetType","type","dataWidgetHeadingType","heading_type","dataWidgetAlign","align","dataWidgetImage","image","className","this","data-bottom-top","data-top-bottom","React","Component","connect","stateRedux","ViewReducer","Widget_text","dataWidgetText","text","dataWidgetStyle","console","log","ReactHtmlParser","Header","src","logoLeoo","alt","menu","Navbar","isLoaded","pages","header","map","item","index","key","activeClassName","to","url","withRouter","config","ConfigReducer","json_files","PagesReducer","Logo","widgets","widgetHeading","View","view","json_path","getView","axios","get","then","result","setState","data","viewToStore","action","value","dispatch","CallApi","getPages","pagesToStore","routes","App","getData","dataToStore","exact","path","component","json_page_path","route","Boolean","window","location","hostname","match","initialState","DataReducer","nextState","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,qC,oLCIrCC,E,4MAEFC,OAAS,EAAKC,MAAMC,M,EAEpBC,gBAAkB,EAAKH,OAAOI,M,EAC9BC,sBAAwB,EAAKL,OAAOM,a,EACpCC,mBAAqB,EAAKP,OAAOQ,S,EACjCC,gBAAkB,EAAKT,OAAOU,M,EAC9BC,gBAAkB,EAAKX,OAAOY,M,EAC9BC,eAAiB,EAAKb,OAAOc,K,EAC7BC,sBAAwB,EAAKf,OAAOgB,a,EACpCC,gBAAkB,EAAKjB,OAAOkB,M,EAC9BC,gBAAkB,EAAKnB,OAAOoB,M,uDAG1B,OACI,yBAAKC,UAAWC,KAAKjB,uBACjB,yBAAKgB,UAAS,uBAAkBC,KAAKb,kBACJ,kBAAxBa,KAAKT,eACF,yBAAKQ,UAAU,wBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,iBACX,4BAAKC,KAAKnB,iBACmB,KAA5BmB,KAAKf,oBAA6B,8BAAOe,KAAKf,qBAEzB,KAAzBe,KAAKX,iBAA0B,2BAAIW,KAAKX,mBAG3B,aAAxBW,KAAKT,eACH,yBAAKQ,UAAU,kDAAkDE,kBAAgB,iCAAiCC,kBAAgB,mCAC9H,yBAAKH,UAAU,6BACX,yBAAKA,UAAU,kBACX,4BAAKC,KAAKnB,iBACmB,KAA5BmB,KAAKf,oBAA6B,uBAAGc,UAAU,qBAAqBC,KAAKf,uBAKtF,yBAAKc,UAAU,sBACX,yBAAKA,UAAU,IACqB,OAA/BC,KAAKP,uBAAkC,4BAAKO,KAAKnB,gBAA6C,KAA5BmB,KAAKf,oBAA6B,8BAAOe,KAAKf,qBACjF,OAA/Be,KAAKP,uBAAkC,4BAAKO,KAAKnB,gBAA6C,KAA5BmB,KAAKf,oBAA6B,8BAAOe,KAAKf,qBACjF,OAA/Be,KAAKP,uBAAkC,4BAAKO,KAAKnB,gBAA6C,KAA5BmB,KAAKf,oBAA6B,8BAAOe,KAAKf,qBACjF,OAA/Be,KAAKP,uBAAkC,4BAAKO,KAAKnB,gBAA6C,KAA5BmB,KAAKf,oBAA6B,8BAAOe,KAAKf,qBACjF,OAA/Be,KAAKP,uBAAkC,4BAAKO,KAAKnB,gBAA6C,KAA5BmB,KAAKf,oBAA6B,8BAAOe,KAAKf,qBACjF,OAA/Be,KAAKP,uBAAkC,4BAAKO,KAAKnB,gBAA6C,KAA5BmB,KAAKf,oBAA6B,8BAAOe,KAAKf,sBAE3F,KAAzBe,KAAKX,iBAA0B,U,GA/CnCc,IAAMC,WAgEpBC,eANS,SAAAzB,GACpB,MAAO,CACH0B,WAAY1B,EAAM2B,eAIXF,CAAyB5B,G,iBC/DlC+B,E,4MAGF9B,OAAS,EAAKC,MAAMC,M,EAEpB6B,eAAiB,EAAK/B,OAAOgC,K,EAC7BC,gBAAkB,EAAKjC,OAAOM,a,uDAM1B,OADA4B,QAAQC,IAAI,SAAUb,KAAKW,iBAEvB,yBAAKZ,UAAU,aACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAWC,KAAKW,iBAAkBG,IAAgBd,KAAKS,uB,GAflDN,IAAMC,WA4BjBC,eANS,SAAAzB,GACpB,MAAO,CACH0B,WAAa1B,KAINyB,CAAyBG,G,iCCdzBO,EAdA,WAEX,OACI,yBAAKhB,UAAW,iCACZ,yBAAKA,UAAW,yCACZ,yBAAKA,UAAU,UACX,yBAAKA,UAAW,aAAaiB,IAAMC,IAAUC,IAAM,a,QCLnEC,G,OAAO,MAELC,E,uKAIE,OACI,qCACMpB,KAAKrB,MAAMwC,KAAKE,WACdF,EAAOnB,KAAKrB,MAAMwC,KAAKG,MAAMH,KAAKI,QAClC,yBAAKxB,UAAU,yBACX,wBAAIA,UAAU,OACToB,GACGA,EAAKK,KAAI,SAACC,EAAMC,GACZ,OAAO,wBAAI3B,UAAU,QAAQ4B,IAAKD,GAAO,kBAAC,IAAD,CAASE,gBAAgB,WAAW7B,UAAU,UAAU8B,GAAIJ,EAAKK,KAAML,EAAKA,kB,GAZpItB,IAAMC,WA6BZ2B,cAAW1B,aAPF,SAAAzB,GACpB,MAAO,CACHoD,OAAQpD,EAAMqD,cAAcD,OAAOE,WAAWZ,MAC9CH,KAAMvC,EAAMuD,gBAIM9B,CAAyBe,ICxBpCL,EATA,WACX,OACI,6BACI,kBAACqB,EAAD,MACA,kBAAC,EAAD,QCDRC,EAAU,KACVC,EAAgB,KAEdC,E,4MACF3D,MAAQ,CACJ4D,KAAM,GACNnB,UAAU,G,EAGdvC,MAAQ,EAAKH,MAAMG,M,EACnB2D,UAAY,EAAK9D,MAAM8D,U,EAEvBC,QAAU,WACNC,IAAMC,IAAI,EAAKH,WACVI,MAAK,SAAAC,GAAY,EAAKC,SAAS,CAAEP,KAAMM,EAAOE,KAAM3B,UAAU,Q,EAGvE4B,YAAc,WACV,IAAMC,EAAS,CAAE1D,KAAM,cAAe2D,MAAO,EAAKvE,OAClD,EAAKD,MAAMyE,SAASF,I,kEAIpBlD,KAAK0C,Y,+BAOL,OAFA1C,KAAKiD,cAGD,oCACMjD,KAAKrB,MAAM0D,QAAQhB,SACjB,6BACCT,QAAQC,IAAI,SAAUb,KAAKrB,MAAM0D,UAC7BA,EAAUrC,KAAKrB,MAAM0D,QAAQG,KAAKH,QAAQ,GAC3CC,EAAgBtC,KAAKrB,MAAM0D,QAAQG,KAAKH,QAAQ,GAChDzB,QAAQC,IAAI,cAAewB,IAC3B,kBAAC,EAAD,MACCC,GACD,kBAAC,EAAD,CAAgB1D,MAAO0D,IACtBD,GACD,kBAAC,EAAD,CAAazD,MAAOyD,IACpB,4BAAKrC,KAAKlB,OACV,6BAAMkB,KAAKyC,YAZa,Q,GA7B7BtC,IAAMC,WAwDVC,eAPS,SAAAzB,GACpB,MAAO,CACHuC,KAAMvC,EAAMuD,aACZE,QAASzD,EAAM2B,eAIRF,CAAyBkC,GC3DlCc,E,4MAEFzE,MAAQ,CACJ0C,MAAO,GACPD,UAAU,G,EAGdiC,SAAW,WACPX,IAAMC,IAAI,EAAKjE,MAAMqD,QAChBa,MAAK,SAAAC,GAAY,EAAKC,SAAS,CAAEzB,MAAOwB,EAAOE,KAAM3B,UAAU,Q,EAGxEkC,aAAe,WACX,IAAML,EAAS,CAAE1D,KAAM,eAAgB2D,MAAO,EAAKvE,OACnD,EAAKD,MAAMyE,SAASF,I,kEAIpBlD,KAAKsD,a,+BAOL,OAFAtD,KAAKuD,eAEE,S,GAzBOpD,IAAMC,WAoCb2B,cAAW1B,aAPF,SAAAzB,GACpB,MAAO,CACHoD,OAAQpD,EAAMqD,cAAcD,OAAOE,WAAWZ,MAC9CH,KAAMvC,EAAMuD,gBAIM9B,CAAyBgD,IClC/CG,G,OAAS,MAGPC,E,4MAEJ7E,MAAQ,CACNoD,OAAQ,GACRX,UAAU,G,EAGZqC,QAAU,WACRf,IAAMC,IAAI,gCACPC,MAAK,SAAAC,GAAY,EAAKC,SAAS,CAAEf,OAAQc,EAAOE,KAAM3B,UAAU,Q,EAGrEsC,YAAc,WACZ,IAAMT,EAAS,CAAE1D,KAAM,gBAAiB2D,MAAO,EAAKvE,OACpD,EAAKD,MAAMyE,SAASF,I,kEAIpBlD,KAAK0D,Y,+BASL,OAJA1D,KAAK2D,cAELH,EAASxD,KAAKrB,MAAM6E,OAAOlC,MAAMA,MAG/B,yBAAKvB,UAAU,OACXC,KAAKrB,MAAMqD,OAAOX,SAClB,yBAAKtB,UAAU,OAEb,kBAAC,EAAD,MAEEC,KAAKrB,MAAM6E,OAAOnC,SAClB,kBAAC,IAAD,KACGT,QAAQC,IAAI,qBAAsB2C,EAAO,IAC1C,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,kBAAC,EAAD,CAAMrB,UAAWe,EAAO,GAAGO,oBACjEP,GACCA,EAAOhC,KAAI,SAACwC,EAAOtC,GAEjB,OADAd,QAAQC,IAAI,eAAemD,EAAMlC,IAAKkC,EAAMF,UAAUE,EAAMlF,MAAOkF,EAAMD,eAAgBrC,GAClF,kBAAC,IAAD,CAAOkC,OAAK,EAACjC,IAAKD,EAAOmC,KAAMG,EAAMlC,IAAKgC,UAAW,kBAAM,kBAAC,EAAD,CAAMhF,MAAOkF,EAAMlF,MAAO2D,UAAWuB,EAAMD,wBAPtF,cALH,gD,GA7BtB5D,IAAMC,WA2DT2B,cAAW1B,aAPF,SAAAzB,GACtB,MAAO,CACLoD,OAAQpD,EAAMqD,cACduB,OAAQ5E,EAAMuD,gBAIQ9B,CAAyBoD,IC3D/BQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YClBAC,EAAe,CACjBtB,KAAM,GACN3B,UAAU,GAiBCkD,MAbf,WAAoD,IAA/B3F,EAA8B,uDAAtB0F,EAAcpB,EAAQ,uCAE/C,OAAQA,EAAO1D,MACX,IAAK,cAGD,OAFAZ,EAAQsE,EAAOC,QAEKvE,EACxB,QAAS,OAAOA,ICblB0F,EAAe,CACjBtC,OAAQ,GACRX,UAAU,GAkBCY,MAdf,WAAsD,IAC9CuC,EADe5F,EAA8B,uDAAtB0F,EAAcpB,EAAQ,uCAEjD,OAAQA,EAAO1D,MACX,IAAK,gBAID,OAFAgF,EADA5F,EAAQsE,EAAOC,MAEfvC,QAAQC,IAAI,kBAAmBjC,GACxB4F,GAAa5F,EACxB,QAAS,OAAOA,ICdlB0F,EAAe,CACjBhD,MAAO,GACPD,UAAU,GAkBCc,MAdf,WAAqD,IAC7CqC,EADc5F,EAA8B,uDAAtB0F,EAAcpB,EAAQ,uCAEhD,OAAQA,EAAO1D,MACX,IAAK,eAID,OAFAgF,EADA5F,EAAQsE,EAAOC,MAEfvC,QAAQC,IAAI,gBAAiBjC,GACtB4F,GAAa5F,EACxB,QAAS,OAAOA,ICdlB0F,EAAe,CACjB9B,KAAM,GACNnB,UAAU,GAgBCd,MAbf,WAAoD,IAA/B3B,EAA8B,uDAAtB0F,EAAcpB,EAAQ,uCAE/C,OAAQA,EAAO1D,MACX,IAAK,cAGD,OAFAZ,EAAQsE,EAAOC,QAEKvE,EACxB,QAAS,OAAOA,ICLlB6F,EAAUC,YAAgB,CAC5BH,cACAtC,gBACAE,eACA5B,gBAMWoE,EAHDC,YAAYH,GCN1BI,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGNI,SAASC,eAAe,SNqHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,a,mBOzI5BjH,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.75cba86a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noonoo2.c04f43b2.svg\";","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nclass Widget_heading extends React.Component {\n\n    widget = this.props.state\n\n    dataWidgetTitle = this.widget.title\n    dataWidgetWidgetStyle = this.widget.widget_style\n    dataWidgetSubtitle = this.widget.subtitle\n    dataWidgetClass = this.widget.class\n    dataWidgetIntro = this.widget.intro\n    dataWidgetType = this.widget.type\n    dataWidgetHeadingType = this.widget.heading_type\n    dataWidgetAlign = this.widget.align\n    dataWidgetImage = this.widget.image\n\n    render() {\n        return (\n            <div className={this.dataWidgetWidgetStyle}>\n                <div className={`content-wrap ${this.dataWidgetClass}`}>\n                        {this.dataWidgetType === 'Heading Block' ? \n                            <div className=\"notopborder nomargin\">\n                                <div className=\"container clearfix\">\n                                    <div className=\"heading-block\">\n                                        <h2>{this.dataWidgetTitle}</h2>\n                                        {this.dataWidgetSubtitle !== \"\" && <span>{this.dataWidgetSubtitle}</span>}\n                                    </div>\n                                    {this.dataWidgetIntro !== \"\" && <p>{this.dataWidgetIntro}</p>}\n                                </div>\n                            </div>\n                        : this.dataWidgetType === 'Parallax' ?\n                            <div className=\"section parallax dark notopmargin noborder mb-0\" data-bottom-top=\"background-position:0px 300px;\" data-top-bottom=\"background-position:0px -300px;\">\n                                <div className=\"container center clearfix\">\n                                    <div className=\"emphasis-title\">\n                                        <h2>{this.dataWidgetTitle}</h2>\n                                        {this.dataWidgetSubtitle !== \"\" && <p className=\"lead topmargin-sm\">{this.dataWidgetSubtitle}</p>}\n                                    </div>\n                                </div>\n                            </div>\n                        :\n                            <div className=\"container clearfix\">\n                                <div className=\"\" >\n                                    {this.dataWidgetHeadingType === 'h1' && <h1>{this.dataWidgetTitle}{this.dataWidgetSubtitle !== \"\" && <span>{this.dataWidgetSubtitle}</span>}</h1>}\n                                    {this.dataWidgetHeadingType === 'h2' && <h2>{this.dataWidgetTitle}{this.dataWidgetSubtitle !== \"\" && <span>{this.dataWidgetSubtitle}</span>}</h2>}\n                                    {this.dataWidgetHeadingType === 'h3' && <h3>{this.dataWidgetTitle}{this.dataWidgetSubtitle !== \"\" && <span>{this.dataWidgetSubtitle}</span>}</h3>}\n                                    {this.dataWidgetHeadingType === 'h4' && <h4>{this.dataWidgetTitle}{this.dataWidgetSubtitle !== \"\" && <span>{this.dataWidgetSubtitle}</span>}</h4>}\n                                    {this.dataWidgetHeadingType === 'h5' && <h5>{this.dataWidgetTitle}{this.dataWidgetSubtitle !== \"\" && <span>{this.dataWidgetSubtitle}</span>}</h5>}\n                                    {this.dataWidgetHeadingType === 'h6' && <h6>{this.dataWidgetTitle}{this.dataWidgetSubtitle !== \"\" && <span>{this.dataWidgetSubtitle}</span>}</h6>}\n                                </div>\n                                {this.dataWidgetIntro !== \"\" && {\n                                }}\n                            </div>\n                        }\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        stateRedux: state.ViewReducer\n    }\n}\n\nexport default connect(mapStateToProps)(Widget_heading)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ReactHtmlParser from 'react-html-parser';\n\n\nclass Widget_text extends React.Component {\n\n\n    widget = this.props.state\n\n    dataWidgetText = this.widget.text\n    dataWidgetStyle = this.widget.widget_style\n\n    \n\n    render() {\n        console.log('WIDGET', this.dataWidgetStyle)\n        return (\n            <div className='container'>\n                <div className=\"container clearfix\">\n                <div className={this.dataWidgetStyle}>{ReactHtmlParser(this.dataWidgetText)}</div> \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        stateRedux : state \n    }\n}\n\nexport default connect(mapStateToProps)(Widget_text)","import React from 'react'\nimport './Header.css'\nimport logo from \"../../../assets/noonoo2.svg\"\nimport logoLeoo from '../../../assets/Leoo.png'\n\nconst Header = () => {\n\n    return (\n        <div className ='container-fluid headerWebsite'>\n            <nav className ='justify-content-center  navbarWebsite' >\n                <div className='col-12'>\n                    <img className ='headerLogo' src ={logoLeoo} alt = 'logo' />\n                </div>                                \n            </nav>            \n        </div>\n    )\n}\n\n\nexport default Header","import React from 'react'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { connect } from 'react-redux'\nimport \"./Navbar.css\"\n\nvar menu = null\n\nclass Navbar extends React.Component {\n\n    render() {\n\n        return (\n            <>\n                {!this.props.menu.isLoaded ? (<div>Loading</div>) :\n                    menu = this.props.menu.pages.menu.header,\n                    <nav className=\"navbar-light bg-light\" >\n                        <ul className=\"nav\">\n                            {menu &&\n                                menu.map((item, index) => {\n                                    return <li className=\"navLi\" key={index}><NavLink activeClassName=\"nav-item\" className=\"navlink\" to={item.url}>{item.item}</NavLink></li>\n                                })}\n                        </ul>\n                    </nav>\n                }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        config: state.ConfigReducer.config.json_files.pages,\n        menu: state.PagesReducer\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Navbar))","import React from \"react\"\nimport Logo from \"./Logo\"\nimport Navbar from \"../Navbar/Navbar-test/Navbar\"\n\nconst Header = () => {\n    return(\n        <div>\n            <Logo/>\n            <Navbar/>\n        </div>\n    )\n}\n\nexport default Header","import React from \"react\"\nimport axios from \"axios\"\nimport { connect } from \"react-redux\"\nimport Widget_heading from \"../Widgets/Widget-heading/Widget_heading\"\nimport Widget_text from \"../Widgets/Widget-text/Widget_text\"\nimport Header from \"../Widgets/Header/Header\"\n\nvar widgets = null\nvar widgetHeading = null\n\nclass View extends React.Component {\n    state = {\n        view: {},\n        isLoaded: false\n    }\n\n    title = this.props.title\n    json_path = this.props.json_path\n\n    getView = () => {\n        axios.get(this.json_path)\n            .then(result => { this.setState({ view: result.data, isLoaded: true }) })\n    }\n\n    viewToStore = () => {\n        const action = { type: 'VIEW_LOADED', value: this.state }\n        this.props.dispatch(action)\n    }\n\n    componentDidMount() {\n        this.getView()\n    }\n\n    render() {\n\n        this.viewToStore()\n\n        return (\n            <>\n                {!this.props.widgets.isLoaded ? \"\" :\n                    <div>\n                    {console.log('YEYEYE', this.props.widgets)}\n                        {widgets = this.props.widgets.view.widgets[2],\n                        widgetHeading = this.props.widgets.view.widgets[1],\n                        console.log(\"YAYAYAYAY: \", widgets)}\n                        <Header />\n                        {widgetHeading &&\n                        <Widget_heading state={widgetHeading}/>}\n                        {widgets &&\n                        <Widget_text state={widgets}/>}\n                        <h1>{this.title}</h1>\n                        <div>{this.json_path}</div>\n                    </div>\n                }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        menu: state.PagesReducer,\n        widgets: state.ViewReducer\n    }\n}\n\nexport default connect(mapStateToProps)(View)","import React from 'react'\nimport { withRouter } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { connect } from 'react-redux'\n\n\n\nclass CallApi extends React.Component {\n\n    state = {\n        pages: [],\n        isLoaded: false,\n    }\n\n    getPages = () => {\n        axios.get(this.props.config)\n            .then(result => { this.setState({ pages: result.data, isLoaded: true }) })\n    }\n\n    pagesToStore = () => {\n        const action = { type: 'PAGES_LOADED', value: this.state }\n        this.props.dispatch(action)\n    }\n\n    componentDidMount() {\n        this.getPages()\n    }\n\n    render() {\n\n        this.pagesToStore()\n\n        return null\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        config: state.ConfigReducer.config.json_files.pages,\n        menu: state.PagesReducer\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(CallApi))","import React from 'react';\nimport axios from \"axios\"\nimport { connect } from \"react-redux\"\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport View from \"./components/Views/View\"\nimport CallApi from \"./CallApi\"\nimport './App.css';\n\n\nvar routes = null\n\n\nclass App extends React.Component {\n\n  state = {\n    config: [],\n    isLoaded: false\n  }\n\n  getData = () => {\n    axios.get(\"http://localhost:3030/config\")\n      .then(result => { this.setState({ config: result.data, isLoaded: true }) })\n  }\n\n  dataToStore = () => {\n    const action = { type: 'CONFIG_LOADED', value: this.state }\n    this.props.dispatch(action)\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  render() {\n\n    this.dataToStore()\n\n    routes = this.props.routes.pages.pages\n\n    return (\n      <div className=\"app\">\n        {!this.props.config.isLoaded ? (<div>Loading...</div>) :\n          <div className=\"App\">\n\n            <CallApi/>\n\n            {!this.props.routes.isLoaded ? \"loading...\" :\n              <Switch>\n                {console.log('LES ROUTES C ICI :', routes[0])}\n                <Route exact path=\"/\" component={() => <View json_path={routes[0].json_page_path}/>} />\n                {routes &&\n                  routes.map((route, index) => {\n                    console.log(\"ICI BATARD :\",route.url, route.component,route.title, route.json_page_path, index)\n                    return <Route exact key={index} path={route.url} component={() => <View title={route.title} json_path={route.json_page_path} />} />\n                  })}\n              </Switch>\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    config: state.ConfigReducer,\n    routes: state.PagesReducer\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    data: [],\n    isLoaded: true\n}\n\n\nfunction DataReducer(state = initialState, action) {\n    let nextState\n    switch (action.type) {\n        case 'DATA_LOADED': \n            state = action.value\n            nextState = state\n            return nextState || state\n        default: return state\n        \n    }\n    \n}\n\nexport default DataReducer","const initialState = {\n    config: [],\n    isLoaded: false\n}\n\n\nfunction ConfigReducer(state = initialState, action) {\n    let nextState\n    switch (action.type) {\n        case 'CONFIG_LOADED': \n            state = action.value\n            nextState = state\n            console.log(\"CONFIG REDUCER:\", state)\n            return nextState || state\n        default: return state\n        \n    }\n    \n}\n\nexport default ConfigReducer","const initialState = {\n    pages: [],\n    isLoaded: false\n}\n\n\nfunction PagesReducer(state = initialState, action) {\n    let nextState\n    switch (action.type) {\n        case 'PAGES_LOADED': \n            state = action.value\n            nextState = state\n            console.log('PAGES REDUCER', state)\n            return nextState || state\n        default: return state\n        \n    }\n    \n}\n\nexport default PagesReducer","const initialState = {\n    view: [],\n    isLoaded: false\n}\n\nfunction ViewReducer(state = initialState, action) {\n    let nextState\n    switch (action.type) {\n        case 'VIEW_LOADED': \n            state = action.value\n            nextState = state\n            return nextState || state\n        default: return state\n        \n    }\n    \n}\n\nexport default ViewReducer","import {createStore, combineReducers} from 'redux'\nimport DataReducer from './Reducer/DataReducer'\nimport ConfigReducer from './Reducer/ConfigReducer'\nimport PagesReducer from './Reducer/PagesReducer'\nimport ViewReducer from './Reducer/ViewReducer'\n\n\nconst reducer = combineReducers({\n    DataReducer,\n    ConfigReducer,\n    PagesReducer,\n    ViewReducer\n})\n\nconst store = createStore(reducer)\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Store/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Leoo.c942009b.png\";"],"sourceRoot":""}